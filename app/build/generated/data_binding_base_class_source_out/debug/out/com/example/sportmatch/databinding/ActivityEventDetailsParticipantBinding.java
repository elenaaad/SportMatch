// Generated by view binder compiler. Do not edit!
package com.example.sportmatch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sportmatch.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEventDetailsParticipantBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final Button buttonToChatP;

  @NonNull
  public final Button detailsBtnMapP;

  @NonNull
  public final TextView detailsDateInputP;

  @NonNull
  public final TextView detailsDateP;

  @NonNull
  public final TextView detailsDescInputP;

  @NonNull
  public final TextView detailsDescP;

  @NonNull
  public final TextView detailsLocInputP;

  @NonNull
  public final TextView detailsLocP;

  @NonNull
  public final Button detailsParticipantsButtonP;

  @NonNull
  public final TextView detailsPlayersInputP;

  @NonNull
  public final TextView detailsPlayersP;

  @NonNull
  public final TextView detailsSportInputP;

  @NonNull
  public final TextView detailsSportP;

  @NonNull
  public final TextView detailsTimeInputP;

  @NonNull
  public final TextView detailsTimeP;

  @NonNull
  public final TextView detailsTitleP;

  @NonNull
  public final ImageView sportImageP;

  @NonNull
  public final TextView titleP;

  private ActivityEventDetailsParticipantBinding(@NonNull RelativeLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull Button buttonToChatP,
      @NonNull Button detailsBtnMapP, @NonNull TextView detailsDateInputP,
      @NonNull TextView detailsDateP, @NonNull TextView detailsDescInputP,
      @NonNull TextView detailsDescP, @NonNull TextView detailsLocInputP,
      @NonNull TextView detailsLocP, @NonNull Button detailsParticipantsButtonP,
      @NonNull TextView detailsPlayersInputP, @NonNull TextView detailsPlayersP,
      @NonNull TextView detailsSportInputP, @NonNull TextView detailsSportP,
      @NonNull TextView detailsTimeInputP, @NonNull TextView detailsTimeP,
      @NonNull TextView detailsTitleP, @NonNull ImageView sportImageP, @NonNull TextView titleP) {
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.buttonToChatP = buttonToChatP;
    this.detailsBtnMapP = detailsBtnMapP;
    this.detailsDateInputP = detailsDateInputP;
    this.detailsDateP = detailsDateP;
    this.detailsDescInputP = detailsDescInputP;
    this.detailsDescP = detailsDescP;
    this.detailsLocInputP = detailsLocInputP;
    this.detailsLocP = detailsLocP;
    this.detailsParticipantsButtonP = detailsParticipantsButtonP;
    this.detailsPlayersInputP = detailsPlayersInputP;
    this.detailsPlayersP = detailsPlayersP;
    this.detailsSportInputP = detailsSportInputP;
    this.detailsSportP = detailsSportP;
    this.detailsTimeInputP = detailsTimeInputP;
    this.detailsTimeP = detailsTimeP;
    this.detailsTitleP = detailsTitleP;
    this.sportImageP = sportImageP;
    this.titleP = titleP;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEventDetailsParticipantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEventDetailsParticipantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_event_details_participant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEventDetailsParticipantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.buttonToChatP;
      Button buttonToChatP = ViewBindings.findChildViewById(rootView, id);
      if (buttonToChatP == null) {
        break missingId;
      }

      id = R.id.detailsBtnMapP;
      Button detailsBtnMapP = ViewBindings.findChildViewById(rootView, id);
      if (detailsBtnMapP == null) {
        break missingId;
      }

      id = R.id.detailsDateInputP;
      TextView detailsDateInputP = ViewBindings.findChildViewById(rootView, id);
      if (detailsDateInputP == null) {
        break missingId;
      }

      id = R.id.detailsDateP;
      TextView detailsDateP = ViewBindings.findChildViewById(rootView, id);
      if (detailsDateP == null) {
        break missingId;
      }

      id = R.id.detailsDescInputP;
      TextView detailsDescInputP = ViewBindings.findChildViewById(rootView, id);
      if (detailsDescInputP == null) {
        break missingId;
      }

      id = R.id.detailsDescP;
      TextView detailsDescP = ViewBindings.findChildViewById(rootView, id);
      if (detailsDescP == null) {
        break missingId;
      }

      id = R.id.detailsLocInputP;
      TextView detailsLocInputP = ViewBindings.findChildViewById(rootView, id);
      if (detailsLocInputP == null) {
        break missingId;
      }

      id = R.id.detailsLocP;
      TextView detailsLocP = ViewBindings.findChildViewById(rootView, id);
      if (detailsLocP == null) {
        break missingId;
      }

      id = R.id.detailsParticipantsButtonP;
      Button detailsParticipantsButtonP = ViewBindings.findChildViewById(rootView, id);
      if (detailsParticipantsButtonP == null) {
        break missingId;
      }

      id = R.id.detailsPlayersInputP;
      TextView detailsPlayersInputP = ViewBindings.findChildViewById(rootView, id);
      if (detailsPlayersInputP == null) {
        break missingId;
      }

      id = R.id.detailsPlayersP;
      TextView detailsPlayersP = ViewBindings.findChildViewById(rootView, id);
      if (detailsPlayersP == null) {
        break missingId;
      }

      id = R.id.detailsSportInputP;
      TextView detailsSportInputP = ViewBindings.findChildViewById(rootView, id);
      if (detailsSportInputP == null) {
        break missingId;
      }

      id = R.id.detailsSportP;
      TextView detailsSportP = ViewBindings.findChildViewById(rootView, id);
      if (detailsSportP == null) {
        break missingId;
      }

      id = R.id.detailsTimeInputP;
      TextView detailsTimeInputP = ViewBindings.findChildViewById(rootView, id);
      if (detailsTimeInputP == null) {
        break missingId;
      }

      id = R.id.detailsTimeP;
      TextView detailsTimeP = ViewBindings.findChildViewById(rootView, id);
      if (detailsTimeP == null) {
        break missingId;
      }

      id = R.id.detailsTitleP;
      TextView detailsTitleP = ViewBindings.findChildViewById(rootView, id);
      if (detailsTitleP == null) {
        break missingId;
      }

      id = R.id.sportImageP;
      ImageView sportImageP = ViewBindings.findChildViewById(rootView, id);
      if (sportImageP == null) {
        break missingId;
      }

      id = R.id.titleP;
      TextView titleP = ViewBindings.findChildViewById(rootView, id);
      if (titleP == null) {
        break missingId;
      }

      return new ActivityEventDetailsParticipantBinding((RelativeLayout) rootView,
          bottomNavigationView, buttonToChatP, detailsBtnMapP, detailsDateInputP, detailsDateP,
          detailsDescInputP, detailsDescP, detailsLocInputP, detailsLocP,
          detailsParticipantsButtonP, detailsPlayersInputP, detailsPlayersP, detailsSportInputP,
          detailsSportP, detailsTimeInputP, detailsTimeP, detailsTitleP, sportImageP, titleP);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
