// Generated by view binder compiler. Do not edit!
package com.example.sportmatch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sportmatch.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditeventBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AutoCompleteTextView autocompleteLoc;

  @NonNull
  public final AutoCompleteTextView autocompletePlayers;

  @NonNull
  public final AutoCompleteTextView autocompleteSport;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final Button buttonEEvent;

  @NonNull
  public final TextInputLayout editEventDate;

  @NonNull
  public final TextInputEditText editEventDateEdt;

  @NonNull
  public final TextInputLayout editEventDesc;

  @NonNull
  public final TextInputEditText editEventDescEdt;

  @NonNull
  public final TextInputLayout editEventLoc;

  @NonNull
  public final TextInputLayout editEventName;

  @NonNull
  public final TextInputEditText editEventNameEdt;

  @NonNull
  public final TextInputLayout editEventPlayers;

  @NonNull
  public final TextInputLayout editEventSport;

  @NonNull
  public final TextInputLayout editEventTime;

  @NonNull
  public final TextInputEditText editEventTimeEdt;

  @NonNull
  public final TextView editTitle;

  @NonNull
  public final ImageView mapImageEdt;

  @NonNull
  public final TextView textDateTime;

  private ActivityEditeventBinding(@NonNull RelativeLayout rootView,
      @NonNull AutoCompleteTextView autocompleteLoc,
      @NonNull AutoCompleteTextView autocompletePlayers,
      @NonNull AutoCompleteTextView autocompleteSport,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull Button buttonEEvent,
      @NonNull TextInputLayout editEventDate, @NonNull TextInputEditText editEventDateEdt,
      @NonNull TextInputLayout editEventDesc, @NonNull TextInputEditText editEventDescEdt,
      @NonNull TextInputLayout editEventLoc, @NonNull TextInputLayout editEventName,
      @NonNull TextInputEditText editEventNameEdt, @NonNull TextInputLayout editEventPlayers,
      @NonNull TextInputLayout editEventSport, @NonNull TextInputLayout editEventTime,
      @NonNull TextInputEditText editEventTimeEdt, @NonNull TextView editTitle,
      @NonNull ImageView mapImageEdt, @NonNull TextView textDateTime) {
    this.rootView = rootView;
    this.autocompleteLoc = autocompleteLoc;
    this.autocompletePlayers = autocompletePlayers;
    this.autocompleteSport = autocompleteSport;
    this.bottomNavigationView = bottomNavigationView;
    this.buttonEEvent = buttonEEvent;
    this.editEventDate = editEventDate;
    this.editEventDateEdt = editEventDateEdt;
    this.editEventDesc = editEventDesc;
    this.editEventDescEdt = editEventDescEdt;
    this.editEventLoc = editEventLoc;
    this.editEventName = editEventName;
    this.editEventNameEdt = editEventNameEdt;
    this.editEventPlayers = editEventPlayers;
    this.editEventSport = editEventSport;
    this.editEventTime = editEventTime;
    this.editEventTimeEdt = editEventTimeEdt;
    this.editTitle = editTitle;
    this.mapImageEdt = mapImageEdt;
    this.textDateTime = textDateTime;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditeventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditeventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_editevent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditeventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autocomplete_loc;
      AutoCompleteTextView autocompleteLoc = ViewBindings.findChildViewById(rootView, id);
      if (autocompleteLoc == null) {
        break missingId;
      }

      id = R.id.autocomplete_players;
      AutoCompleteTextView autocompletePlayers = ViewBindings.findChildViewById(rootView, id);
      if (autocompletePlayers == null) {
        break missingId;
      }

      id = R.id.autocomplete_sport;
      AutoCompleteTextView autocompleteSport = ViewBindings.findChildViewById(rootView, id);
      if (autocompleteSport == null) {
        break missingId;
      }

      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.buttonEEvent;
      Button buttonEEvent = ViewBindings.findChildViewById(rootView, id);
      if (buttonEEvent == null) {
        break missingId;
      }

      id = R.id.editEventDate;
      TextInputLayout editEventDate = ViewBindings.findChildViewById(rootView, id);
      if (editEventDate == null) {
        break missingId;
      }

      id = R.id.editEventDateEdt;
      TextInputEditText editEventDateEdt = ViewBindings.findChildViewById(rootView, id);
      if (editEventDateEdt == null) {
        break missingId;
      }

      id = R.id.editEventDesc;
      TextInputLayout editEventDesc = ViewBindings.findChildViewById(rootView, id);
      if (editEventDesc == null) {
        break missingId;
      }

      id = R.id.editEventDescEdt;
      TextInputEditText editEventDescEdt = ViewBindings.findChildViewById(rootView, id);
      if (editEventDescEdt == null) {
        break missingId;
      }

      id = R.id.editEventLoc;
      TextInputLayout editEventLoc = ViewBindings.findChildViewById(rootView, id);
      if (editEventLoc == null) {
        break missingId;
      }

      id = R.id.editEventName;
      TextInputLayout editEventName = ViewBindings.findChildViewById(rootView, id);
      if (editEventName == null) {
        break missingId;
      }

      id = R.id.editEventNameEdt;
      TextInputEditText editEventNameEdt = ViewBindings.findChildViewById(rootView, id);
      if (editEventNameEdt == null) {
        break missingId;
      }

      id = R.id.editEventPlayers;
      TextInputLayout editEventPlayers = ViewBindings.findChildViewById(rootView, id);
      if (editEventPlayers == null) {
        break missingId;
      }

      id = R.id.editEventSport;
      TextInputLayout editEventSport = ViewBindings.findChildViewById(rootView, id);
      if (editEventSport == null) {
        break missingId;
      }

      id = R.id.editEventTime;
      TextInputLayout editEventTime = ViewBindings.findChildViewById(rootView, id);
      if (editEventTime == null) {
        break missingId;
      }

      id = R.id.editEventTimeEdt;
      TextInputEditText editEventTimeEdt = ViewBindings.findChildViewById(rootView, id);
      if (editEventTimeEdt == null) {
        break missingId;
      }

      id = R.id.editTitle;
      TextView editTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTitle == null) {
        break missingId;
      }

      id = R.id.mapImageEdt;
      ImageView mapImageEdt = ViewBindings.findChildViewById(rootView, id);
      if (mapImageEdt == null) {
        break missingId;
      }

      id = R.id.textDateTime;
      TextView textDateTime = ViewBindings.findChildViewById(rootView, id);
      if (textDateTime == null) {
        break missingId;
      }

      return new ActivityEditeventBinding((RelativeLayout) rootView, autocompleteLoc,
          autocompletePlayers, autocompleteSport, bottomNavigationView, buttonEEvent, editEventDate,
          editEventDateEdt, editEventDesc, editEventDescEdt, editEventLoc, editEventName,
          editEventNameEdt, editEventPlayers, editEventSport, editEventTime, editEventTimeEdt,
          editTitle, mapImageEdt, textDateTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
